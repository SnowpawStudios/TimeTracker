@page "/timeentries"
@inject HttpClient Http
@using TimeTracker.Shared.Models.TimeEntry
<PageTitle>Time Entries</PageTitle>
<h3>TimeEntries</h3>

<table>
    <thead>
        <tr>
            <th>Start</th>
            <th>End</th>
            <th>Duration</th>
            <th>Project</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var timeEntry in timeEntries)
        {
            <tr>
                <td>@timeEntry.Start</td>
                <td>@timeEntry.End</td>
                <td>@GetDuration(timeEntry.Start, timeEntry.End)</td>
                <td>@timeEntry.Project.Name</td>
                <td>
                    <button
                        class="btn btn-primary"
                        onclick="@(()=>ShowProject(timeEntry.Project.Id))"
                        >Show Project
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@if(projectId > 0)
{
    <ProjectDetails ProjectId="projectId" />
}


@code {
    private List<TimeEntryResponse> timeEntries = new List<TimeEntryResponse>();
    int projectId;

    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetFromJsonAsync<List<TimeEntryResponse>>("api/timeentry");
        if(result != null)
        {
            timeEntries = result;
        }

    }

    private string GetDuration(DateTime? start, DateTime? end)
    {
        if(start != null && end != null)
        {
            var duration = end.Value - start.Value;
            var result = $"{duration.Hours}h {duration.Minutes}m";
            return result;
        }
        return string.Empty;
    }

    private void ShowProject(int id)
    {
        if(projectId == id)
        {
            return;
        }
        projectId = id;

        StateHasChanged();
    }
}
